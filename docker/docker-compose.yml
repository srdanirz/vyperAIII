version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    volumes:
      - .:/app
      - poetry-cache:/root/.cache/pypoetry
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
    depends_on:
      - redis
      - prometheus
      - grafana

  test:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    volumes:
      - .:/app
      - poetry-cache:/root/.cache/pypoetry
      - ./test-results:/app/test-results
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=testing
      - TEST_MODE=true
      - TEST_OPENAI_API_KEY=test-key
      - TEST_DEEPSEEK_API_KEY=test-key
      - TEST_CACHE_DIR=/app/test_cache
      - TEST_LOG_LEVEL=DEBUG
    command: poetry run pytest --cov=vyper --cov-report=html --cov-report=xml -v

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  redis-test:
    image: redis:6-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis-test-data:/data

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  prometheus-test:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus-test-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus-test.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    depends_on:
      - prometheus

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"

  minio-test:
    image: minio/minio
    ports:
      - "9002:9000"
      - "9003:9001"
    volumes:
      - minio-test-data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"

volumes:
  redis-data:
  redis-test-data:
  prometheus-data:
  prometheus-test-data:
  grafana-data:
  minio-data:
  minio-test-data:
  poetry-cache: